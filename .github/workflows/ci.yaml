name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: "Build and Push"
    runs-on: ${{ matrix.os }}
    environment: deploy
    outputs:
      docker_tag: ${{ steps.generate_tag.outputs.sha }}

    strategy:
      matrix:
        node-version: [22]
        os: [ubuntu-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm install

#      - name: Running Tests
#        run: npm run test

      - name: Generate Tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t samarafer/docker-atividade:${{ steps.generate_tag.outputs.sha }} .

      - name: Push Docker Image to DockerHub
        run: docker push samarafer/docker-atividade:${{ steps.generate_tag.outputs.sha }}

  deploy:
    name: Deploy on Digital Ocean
    environment: deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install DigitalOcean CLI
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.90.0/doctl-1.90.0-linux-amd64.tar.gz | tar -xz
          sudo mv doctl /usr/local/bin

      - name: Authenticate with DigitalOcean
        run: doctl auth init --access-token ${{ secrets.DIGITALOCEAN_TOKEN }}    

      - name: Prepare SSH Access
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to server
        run: |
          scp -i private_key.pem docker-compose.yml root@${{ secrets.HOST }}:/root/docker-compose.yml
      
      - name: Deploy
        run: |
          TAG=${{ steps.generate_tag.outputs.sha }}
          echo "Using Docker Image Tag: $TAG"

          ssh -i private_key.pem root@${{ secrets.HOST }} << EOF
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }};
            docker pull samarafer/docker-atividade:$TAG;
            echo 'DOCKER_IMAGE_TAG=$TAG' >> .env;
            docker-compose -f /root/docker-compose.yml up -d --build;
          EOF
