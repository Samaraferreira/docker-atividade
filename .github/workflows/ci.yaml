name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: "Build and Push"
    runs-on: ${{ matrix.os }}
    environment: deploy
    outputs:
      docker_tag: ${{ steps.generate_tag.outputs.sha }}

    strategy:
      matrix:
        node-version: [22]
        os: [ubuntu-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm install

#      - name: Running Tests
#        run: npm run test

      - name: Generate Tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t samarafer/docker-atividade:${{ steps.generate_tag.outputs.sha }} .

      - name: Push Docker Image to DockerHub
        run: docker push samarafer/docker-atividade:${{ steps.generate_tag.outputs.sha }}

  deploy:
    name: Deploy on Digital Ocean
    environment: deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PASSWORD }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose file via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PASSWORD }}
          source: "./docker-compose.yml"
          target: "~/"

      - name: Deploy on Digital Ocean via ssh
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PASSWORD }}
          script: |
            # Extract the tag on job build
            TAG=${{ needs.build.outputs.docker_tag }}
            # Login Docker
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            #Stop Containers
            CONTAINERS=$(docker ps -q)
            if [ -n "$CONTAINERS" ]; then
              docker stop $CONTAINERS
            else
              echo " No running containers"
            fi
            #Remove Old Containers
            CONTAINERS=$(docker ps -a -q)
            if [ -n "$CONTAINERS" ]; then
              docker rm $CONTAINERS
            else
              echo " No containers to remove"
            fi
            #Run a new container from a new image
            docker-compose up -d --build

